
@{
    ViewBag.Title = "Reflection";
}

<div class="wrapper2">
    <div class="pad">
        <div class="text-center">
            <div class="row">
                <div class="col">
                    <h1>Reflection</h1>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">Why I chose the Twitter API?</div>
                <div class="content">
                    Prior to this assignment, I did not know much about the Twitter API and I believe using this API would be useful to a webmaster.
                    I have some experience with creating .NET websites and I believed that this would suit my needs in demonstrating the uses of the Twitter API.
                    I looked online for any pre-existing tutorials, but I could not find any which directly related to using the Twitter API.
                    Whilst considering Twitter I found that the site had ‘330 million monthly active users’ (Statista, n.d.).
                    I thought it would be great to integrate with a social media platform this large.
                    I was also curious to find out the limits and capabilities of the API as I had assumed the functionality would be limited.
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">Website Features:</div>
                <div class="content">
                    <ul>
                        <li>Bootstrap 4.0</li>
                        <li>Javascript</li>
                        <li>Modal Images</li>
                        <li>Google ReCaptcha</li>
                        <li>Code Snippet via Pastebin</li>
                        <li>Responsive Web Design</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">What I have learnt about the Twitter API?</div>
                <div class="content">
                    There is a huge variety offered by the Twitter API such as direct messaging, getting local trends, tweeting and access to public user profiles.
                    Full documentation of the API can be found here <a href="https://developer.twitter.com/en/docs">twitter documentation</a>.
                    I also learnt how to connect to the Twitter API within visual studio.
                    I also considered other social media platforms such as Instagram, but I felt that Twitter was much more suitable due to its ease and vast capabilities.
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">What went well?</div>
                <div class="content">
                    Interacting with the API was relatively straight forward, the documentation provided by the author of the LinqToTwitter APi was very well structured and there were several wiki articles issued online.
                    Arguably the hardest part of using the API was ensuring the code authenticated with the Twitter App.
                    Once I had successfully connected, I just had to decide which part of the API I wanted to demonstrate.
                    I based this on the most popular functions on Twitter, user profiles and tweets.
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">What didn’t go well?</div>
                <div class="content">
                    Since I wanted to demo the API, I decided to write the web project as a MVC .NET web project as this would allow me full access to the API and would allow me to display the results on the web page.
                    There were several issues with this, for example I could not host the web application at university.
                    This meant that I had to consider hosting services such as Azure and Amazon Web Services.
                    I found that since I had created the application in Visual Studio (a Microsoft owned platform) it was very easy to integrate with Azure.
                    Secondly, since I was hosting through Azure, I felt that live exposure of the API’s features would be a hacker’s dream.
                    I therefore decided to make aspects such as ‘sending tweets’ unavailable through the web application since this would allow users to post anything they wanted from the web application.
                    I also thought that users could keep refreshing the webpage to send multiple requests to the Twitter API and this would eventually lock me out of the API due to request throttling.
                    I therefore decided to implement a ReCapture as this would enforce security on the website and ensure bots were unable to spam the API.
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">What I enjoyed about creating this tutorial:</div>
                <div class="content">
                    I have enjoyed creating this tutorial as I have learnt a lot about web technologies such as using bootstrap, modal images, google captcha and creating a responsive web design.
                    I have not created a web application recently and therefore a lot of reading was needed to write the HTML and CSS for the webpage.
                    I also used JavaScript to add further capability to the website.
                    I looked back at the website I had created in first year and found that with extensive reading and programming knowledge, I could build a web application that looked better and had greater functionality.
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="headers">Evaluation:</div>
                <div class="content">
                    As previously mentioned the Twitter API provides an extensive amount of data available to a developer.
                    One weakness of the Twitter API is that you can only submit 15 requests every 15 minutes and therefore you cannot keep up to date constantly.
                    I feel that I have learnt a great deal about the API itself and about all the technologies used in creating this web application.
                    To achieve this webpage, I used several references which are detailed below.
                    In order to create the webpage, I found that w3schools was very useful for HTML, CSS and JavaScript.
                    When it came to the backend of the web application I found numerous references such as stackoverflow and GitHub were very useful.
                </div>
            </div>
        </div>
        
    <div class="row">
        <div class="col">
            <div class="headers">Image References:</div>
            <div class="content"><b>All images used have 'free to use or share' useage rights</b></div>
            <div class="content">
                thenounproject, n.d. Envelope. [Online] 
                Available at: <a href="https://thenounproject.com/term/envelope/16971/">noun project</a>  <br />
                [Accessed 12 01 2018].<br /><br />
            </div>
            <div class="content">
                pixabay, n.d. Inverted Twitter bird. [Online] 
                Available at: <a href="https://pixabay.com/en/twitter-logo-twitter-bird-1788039/">inverted Twitter logo</a>  <br />
                [Accessed 03 01 2018].<br /><br />
                
            </div>
            <div class="content">
                pixabay, n.d. Twitter button bird. [Online]
                Available at: <a href="https://pixabay.com/en/twitter-bird-twitter-button-bird-1366218/">Twitter logo</a>  <br />
                [Accessed 12 01 2018].<br /><br />
            </div>
            <div class="content">
                Kapgen, n.d. Responsive Web Development. [Online]
                Available at: <a href="http://www.kapgen.com/responsive-web-development/">web development banner</a>  <br />
                [Accessed 02 01 2018].<br /><br />
            </div>
        </div>
    </div>

    <div class="row">
            <div class="col">
                <div class="headers">References:</div>
                <div class="content">
                    Allardice, J., 2012. Get the value of an &lt;h2&gt; tag with JavaScript. [Online]
                    Available at: <a href="https://stackoverflow.com/questions/11311033/get-the-value-of-an-h2-tag-with-javascript">JavaScript tag value</a> <br />
                    [Accessed 05 01 2018].<br /><br />
                </div>
                <div class="content">
                    Ball, M., 2010. Div set to display:none in css class - why can't I override it and show the div in the body?. [Online]
                    Available at: <a href="https://stackoverflow.com/questions/4070638/div-set-to-displaynone-in-css-class-why-cant-i-override-it-and-show-the-div">overriding CSS</a> <br />
                    [Accessed 10 01 2018].<br /><br />
                </div>
                <div class="content">
                    Bootstrap, 2018. Bootstrap 4 documentation. [Online]
                    Available at: <a href="https://v4-alpha.getbootstrap.com/">bootstrap documentation</a><br />
                    [Accessed 01 01 2018].<br /><br />
                </div>
                <div class="content">
                    Bootstrap, 2018. Navbar. [Online]
                    Available at: <a href="https://v4-alpha.getbootstrap.com/components/navbar/">bootstrap navbar</a> <br />
                    [Accessed 10 01 2018]. <br /><br />
                </div>
                <div class="content">
                    Cloudhead, 2009.Image file path in Razor .cshtml view file. [Online]
                    Available at: <a href="https://stackoverflow.com/questions/38726663/image-file-path-in-razor-cshtml-view-file">image path file in Razor</a> <br />
                    [Accessed 08 01 2018].<br /><br />
                </div>
                <div class="content">
                    cloudhead, 2009. removing html element styles via javascript. [Online]
                    Available at: <a href="https://stackoverflow.com/questions/1040402/removing-html-element-styles-via-javascript">removing styles with JavaScript</a> <br />
                    [Accessed 07 01 2018].<br /><br />
                </div>
                <div class="content">
                    codeproject, 2015. Google reCAPTCHA in ASP.NET MVC. [Online]
                    Available at: <a href="https://www.codeproject.com/Articles/874150/Google-reCAPTCHA-in-ASP-NET-MVC">google reCapture</a> <br />
                    [Accessed 13 01 2018].<br /><br />
                </div>
                <div class="content">
                    Mayo, J., 2013. Return all tweets from my timeline. [Online]
                    Available at: <a href="https://stackoverflow.com/questions/18639108/return-all-tweets-from-my-timeline"></a> <br />
                    [Accessed 13 01 2017].<br /><br />
                </div>
                <div class="content">
                    Mayo, J., 2017. Making API Calls. [Online]
                    Available at: <a href="https://github.com/JoeMayo/LinqToTwitter/wiki/Making-API-Calls">Making API calls</a> <br />
                    [Accessed 10 01 2018].<br /><br />
                </div>
                <div class="content">
                    Mayo, J., 2017. Querying User Info. [Online]
                    Available at: <a href="https://github.com/JoeMayo/LinqToTwitter/wiki/Querying-User-Info">Querying user info</a> <br />
                    [Accessed 10 01 2018].<br /><br />
                </div>
                <div class="content">
                    MENING, R., 2017. 15 Best web safe formats. [Online]
                    Available at: <a href="https://websitesetup.org/web-safe-fonts-html-css/">Best web safe formats</a> <br />
                    [Accessed 14 01 2018].<br /><br />
                </div>
                <div class="content">
                    Microsoft, 2018. Web Apps. [Online]
                    Available at: <a href="https://azure.microsoft.com/en-gb/services/app-service/web/">Microsoft Azure</a><br />
                    [Accessed 12 01 2018].<br /><br />
                </div>
                <div class="content">
                    Omnicore, 2018. Twitter by the Numbers: Stats, Demographics & Fun Facts. [Online]
                    Available at: <a href="https://www.omnicoreagency.com/twitter-statistics/">Twitter statistics</a> <br />
                    [Accessed 13 01 2018].<br /><br />
                </div>
                <div class="content">
                    pastebin, 2018. https://pastebin.com/. [Online]
                    Available at: <a href="https://pastebin.com/">pastebin</a> <br />
                    [Accessed 14 01 2018].<br /><br />
                </div>
                <div class="content">
                    statista, n.d. Number of monthly active Twitter users worldwide from 1st quarter 2010 to 3rd quarter 2017 (in millions). [Online]
                    Available at: <a href="https://www.statista.com/statistics/282087/number-of-monthly-active-twitter-users/">monthly twitter users</a> <br />
                    [Accessed 13 01 2018].<br /><br />
                </div>
                <div class="content">
                    Taylor, M. J., n.d. How to keep footers at the bottom of the page. [Online]
                    Available at: <a href="http://matthewjamestaylor.com/blog/bottom-footer-demo.htm">Footer at bottom of page</a> <br />
                    [Accessed 13 01 2018].<br /><br />
                </div>
                <div class="content">
                    w3schools, n.d. Modal images. [Online]
                    Available at: <a href="https://www.w3schools.com/howto/howto_css_modal_images.asp">Modal images</a><br />
                    [Accessed 13 01 2018].<br /><br />
                </div>
                <div class="content">
                    totalprogUS, 2013. Bootstrap add active class to li. [Online]
                    Available at: <a href="http://totalprogus.blogspot.co.uk/2013/12/bootstrap-add-active-class-to-li.html">Adding class to li</a> <br />
                    [Accessed 10 01 2018].<br /><br />
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col">
            <div style="clear: both; margin-left: auto; margin-right: auto; display: table; margin-top: 2%;">
                @Html.ActionLink("Previous", "EndResult", "Tutorial", null, new { @style = "float:left; background-color:#333; color:white; width:200px; border-radius:15px; padding:20px 0 20px 0; text-align:center; margin-bottom:8%;" })
            </div>
        </div>
    </div>
</div>